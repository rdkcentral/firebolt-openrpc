name: Check Pull Request
on:
  workflow_dispatch:
  pull_request:
    types:
      - 'opened'
      - 'synchronize'
  push:
    branches:
      - next
env:
  HUSKY: 0

jobs:
  release:
    name: Trigger Workflows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: npm ci

      # Trigger CXX Build Workflow
      - name: Trigger Firebolt API CXX Build Workflow
        id: cxx_trigger
        run: |
          TOKEN="${{ secrets.WORKFLOW_TRIGGER_SECRET }}"
          REPO_OWNER="rdkcentral"
          REPO_NAME="firebolt-apis"
          CXX_WORKFLOW_NAME="CXX Build"
          
          # Trigger CXX build workflow
          curl -s -H "Authorization: token $TOKEN" \
            -X POST "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/workflows/$CXX_WORKFLOW_NAME/dispatches" \
            -d '{"ref":"main"}'

          # Poll for the latest workflow run
          while true; do
            cxx_workflow=$(curl -s -H "Authorization: token $TOKEN" \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/runs?event=workflow_dispatch&status=in_progress&per_page=1" \
              | jq -r '.workflow_runs[] | select(.name == "CXX Build")')

            cxx_workflow_run_id=$(echo $cxx_workflow | jq -r '.id')
            
            if [ "$cxx_workflow_run_id" != "null" ]; then
              echo "CXX_WORKFLOW_ID=$cxx_workflow_run_id" >> $GITHUB_ENV
              echo "CXX Workflow triggered successfully with ID: $cxx_workflow_run_id"
              break
            else
              echo "Waiting for the CXX workflow to start..."
              sleep 10
            fi
          done

      # Trigger MFOS Workflow
      - name: Trigger Firebolt API MFOS Workflow
        id: mfos_trigger
        run: |
          TOKEN="${{ secrets.WORKFLOW_TRIGGER_SECRET }}"
          REPO_OWNER="rdkcentral"
          REPO_NAME="firebolt-apis"
          MFOS_WORKFLOW_NAME="MFOS standalone sanity report - CORE,MANAGE,DISCOVERY"

          # Trigger MFOS workflow
          curl -s -H "Authorization: token $TOKEN" \
            -X POST "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/workflows/$MFOS_WORKFLOW_NAME/dispatches" \
            -d '{"ref":"main"}'

          # Poll for the latest workflow run
          while true; do
            mfos_workflow=$(curl -s -H "Authorization: token $TOKEN" \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/runs?event=workflow_dispatch&status=in_progress&per_page=1" \
              | jq -r '.workflow_runs[] | select(.name == "MFOS standalone sanity report - CORE,MANAGE,DISCOVERY")')

            mfos_workflow_run_id=$(echo $mfos_workflow | jq -r '.id')
            
            if [ "$mfos_workflow_run_id" != "null" ]; then
              echo "MFOS_WORKFLOW_ID=$mfos_workflow_run_id" >> $GITHUB_ENV
              echo "MFOS Workflow triggered successfully with ID: $mfos_workflow_run_id"
              break
            else
              echo "Waiting for the MFOS workflow to start..."
              sleep 10
            fi
          done

  # Polling job for CXX workflow
  cxx_polling:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Poll Firebolt API CXX Build Workflow Status
        id: poll-cxx
        run: |
          TOKEN="${{ secrets.WORKFLOW_TRIGGER_SECRET }}"
          REPO_OWNER="rdkcentral"
          REPO_NAME="firebolt-apis"
          CXX_WORKFLOW_ID="${{ env.CXX_WORKFLOW_ID }}"

          while true; do
            cxx_status=$(curl -s -H "Authorization: token $TOKEN" \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/runs/$CXX_WORKFLOW_ID" | jq -r '.status')

            if [ "$cxx_status" == "completed" ]; then
              cxx_conclusion=$(curl -s -H "Authorization: token $TOKEN" \
                "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/runs/$CXX_WORKFLOW_ID" | jq -r '.conclusion')

              if [ "$cxx_conclusion" == "success" ]; then
                echo "CXX Build completed successfully."
              else
                echo "::warning::CXX Build failed. This won't block the job."
              fi
              break
            else
              echo "CXX Build still in progress. Checking again in 120 seconds..."
              sleep 120
            fi
          done

  # Polling job for MFOS workflow
  mfos_polling:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Poll Firebolt API MFOS Workflow Status
        id: poll-mfos
        run: |
          TOKEN="${{ secrets.WORKFLOW_TRIGGER_SECRET }}"
          REPO_OWNER="rdkcentral"
          REPO_NAME="firebolt-apis"
          MFOS_WORKFLOW_ID="${{ env.MFOS_WORKFLOW_ID }}"

          while true; do
            mfos_status=$(curl -s -H "Authorization: token $TOKEN" \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/runs/$MFOS_WORKFLOW_ID" | jq -r '.status')

            if [ "$mfos_status" == "completed" ]; then
              mfos_conclusion=$(curl -s -H "Authorization: token $TOKEN" \
                "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/runs/$MFOS_WORKFLOW_ID" | jq -r '.conclusion')

              if [ "$mfos_conclusion" == "success" ]; then
                echo "MFOS Workflow completed successfully."
              else
                echo "::error::MFOS Workflow failed. Failing the job."
                exit 1
              fi
              break
            else
              echo "MFOS Workflow still in progress. Checking again in 120 seconds..."
              sleep 120
            fi
          done
